name: CI

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  push:
    branches: [main]

jobs:
  test-and-analyze:
    runs-on: ubuntu-latest
    env:
      SONAR_HOST_URL: https://sonarcloud.io
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Install dependencies
        run: |
          pip install -e ".[grpc,dev]"
      
      - name: Generate protobuf code for tests
        run: |
          # Generate orchestrator protobuf files for unit tests
          mkdir -p services/orchestrator/gen
          python -m grpc_tools.protoc \
            --proto_path=specs \
            --python_out=services/orchestrator/gen \
            --grpc_python_out=services/orchestrator/gen \
            --pyi_out=services/orchestrator/gen \
            orchestrator.proto
          # Fix imports
          sed -i 's/^import orchestrator_pb2/from . import orchestrator_pb2/' \
            services/orchestrator/gen/orchestrator_pb2_grpc.py
          # Create __init__.py
          echo 'from . import orchestrator_pb2, orchestrator_pb2_grpc' > services/orchestrator/gen/__init__.py
          echo '__all__ = ["orchestrator_pb2", "orchestrator_pb2_grpc"]' >> services/orchestrator/gen/__init__.py
      
      - name: Lint code
        run: ruff check .
      
      - name: Run tests
        run: pytest -m "not e2e and not integration" --cov=swe_ai_fleet --cov-report=xml
      
      - name: SonarCloud Scan (Pull Request)
        if: github.event_name == 'pull_request' && env.SONAR_TOKEN != ''
        uses: sonarsource/sonarcloud-github-action@v3.1
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.organization=underpass-ai-swe-ai-fleet
            -Dsonar.projectKey=underpass-ai-swe-ai-fleet
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.scanner.image=sonarsource/sonar-scanner-cli:11.1
      
      - name: SonarCloud Scan (Main Branch)
        if: github.event_name == 'push' && github.ref_name == 'main' && env.SONAR_TOKEN != ''
        uses: sonarsource/sonarcloud-github-action@v3.1
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.organization=underpass-ai-swe-ai-fleet
            -Dsonar.projectKey=underpass-ai-swe-ai-fleet
            -Dsonar.scanner.image=sonarsource/sonar-scanner-cli:11.1
