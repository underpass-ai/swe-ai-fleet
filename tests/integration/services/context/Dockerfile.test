# syntax=docker/dockerfile:1
# Dockerfile for Context Service E2E tests
# Generates gRPC code during build and runs tests against containerized service

FROM python:3.13-slim AS base

WORKDIR /workspace

# Install system dependencies with cache mounts
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    gcc \
    g++

# Install Python test dependencies
COPY tests/integration/services/context/requirements-test.txt /workspace/requirements-test.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-cache-dir -r requirements-test.txt

# Copy protobuf spec
COPY specs/context.proto /workspace/specs/context.proto

# Generate gRPC code from protobuf during build
RUN mkdir -p /workspace/services/context/gen && \
    python -m grpc_tools.protoc \
    --proto_path=/workspace/specs \
    --python_out=/workspace/services/context/gen \
    --grpc_python_out=/workspace/services/context/gen \
    --pyi_out=/workspace/services/context/gen \
    context.proto && \
    # Fix imports in generated files \
    sed -i 's/^import context_pb2/from . import context_pb2/' \
    /workspace/services/context/gen/context_pb2_grpc.py && \
    # Create __init__.py \
    echo 'from . import context_pb2, context_pb2_grpc\n__all__ = ["context_pb2", "context_pb2_grpc"]' \
    > /workspace/services/context/gen/__init__.py

# Copy source code (needed for imports like core.*)
COPY core/ /workspace/core/

# Copy test files (all integration tests for context service)
COPY tests/integration/services/context/*.py /workspace/tests/integration/services/context/
COPY pytest.ini /workspace/pytest.ini

# Set PYTHONPATH to find generated modules and source code
ENV PYTHONPATH=/workspace:/workspace/core

# Run tests
CMD ["pytest", "-m", "integration", "tests/integration/services/context/", "-v", "--tb=short"]

