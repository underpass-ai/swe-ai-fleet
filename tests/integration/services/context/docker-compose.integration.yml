version: '3.8'

services:
  neo4j:
    image: neo4j:5.14
    container_name: context-e2e-neo4j
    ports:
      - "17687:7687"  # Usar puerto 17687 en host para evitar colisión con K8s
      - "17474:7474"  # Usar puerto 17474 en host
    environment:
      NEO4J_AUTH: neo4j/testpassword
      NEO4J_dbms_memory_pagecache_size: 512M
      NEO4J_dbms_memory_heap_initial__size: 512M
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p testpassword 'RETURN 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - context-e2e-network

  redis:
    image: redis:7-alpine
    container_name: context-e2e-redis
    ports:
      - "16379:6379"  # Usar puerto 16379 en host para evitar colisión con K8s
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - context-e2e-network

  nats:
    image: nats:2.10-alpine
    container_name: context-e2e-nats
    ports:
      - "14222:4222"  # Usar puerto 14222 en host para evitar colisión con K8s
      - "18222:8222"  # Usar puerto 18222 en host
    command: --jetstream --store_dir /data -m 8222
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - context-e2e-network

  context:
    build:
      context: ../../../..
      dockerfile: services/context/Dockerfile
    container_name: context-e2e-service
    ports:
      - "50054:50054"  # Este puerto parece estar libre
    environment:
      GRPC_PORT: "50054"
      NEO4J_URI: "bolt://neo4j:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASSWORD: "testpassword"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      NATS_URL: "nats://nats:4222"
      ENABLE_NATS: "true"
      PYTHONUNBUFFERED: "1"
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import grpc; channel = grpc.insecure_channel(\"localhost:50054\"); channel.close()' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s
    networks:
      - context-e2e-network

  tests:
    build:
      context: ../../../..
      dockerfile: tests/integration/services/context/Dockerfile.test
    container_name: context-e2e-tests
    depends_on:
      context:
        condition: service_healthy
    environment:
      PYTHONUNBUFFERED: "1"
      NEO4J_HOST: "neo4j"
      REDIS_HOST: "redis"
      CONTEXT_HOST: "context"
    networks:
      - context-e2e-network

networks:
  context-e2e-network:
    driver: bridge

