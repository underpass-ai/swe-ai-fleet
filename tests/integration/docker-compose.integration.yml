version: '3.8'

# Docker Compose para tests de integración
# Levanta servicios necesarios: Neo4j, Redis, NATS + servicios Python (Orchestrator, Context)
#
# Nota: Servicios Go (Planning, StoryCoach, Workspace) se agregan cuando sus protos estén listos
#
# Uso:
#   podman-compose -f tests/integration/docker-compose.integration.yml up -d
#   pytest -m integration
#   podman-compose -f tests/integration/docker-compose.integration.yml down

services:
  # Neo4j - Graph database para Context Service
  neo4j:
    image: docker.io/library/neo4j:5.14
    container_name: neo4j-integration-test
    ports:
      - "7687:7687"  # Bolt protocol
      - "7474:7474"  # HTTP browser
    environment:
      NEO4J_AUTH: neo4j/testpassword
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_memory_heap_max__size: 512M
    volumes:
      - neo4j-integration-data:/data
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "testpassword", "RETURN 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 30s

  # Redis - Key-value store
  redis:
    image: docker.io/library/redis:7-alpine
    container_name: redis-integration-test
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-integration-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 2s
      retries: 10

  # NATS JetStream - Message broker
  nats:
    image: docker.io/library/nats:2.10-alpine
    container_name: nats-integration-test
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # HTTP monitoring
    command: 
      - "--jetstream"
      - "--store_dir=/data"
    volumes:
      - nats-integration-data:/data
    # No healthcheck - NATS alpine doesn't have wget/curl
    # Script checks port 4222 directly with nc

  # Orchestrator Service - Tests against real gRPC service
  orchestrator:
    image: registry.underpassai.com/swe-fleet/orchestrator:latest
    container_name: orchestrator-integration-test
    ports:
      - "50055:50055"  # gRPC port
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: testpassword
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
      PYTHONUNBUFFERED: "1"
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    healthcheck:
      test: ["CMD", "python", "-c", "import grpc; channel = grpc.insecure_channel('localhost:50055'); channel.close()"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 15s

  # Context Service - Tests against real gRPC service
  context:
    image: registry.underpassai.com/swe-fleet/context:latest
    container_name: context-integration-test
    ports:
      - "50054:50054"  # gRPC port
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: testpassword
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
      PYTHONUNBUFFERED: "1"
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    healthcheck:
      test: ["CMD", "python", "-c", "import grpc; channel = grpc.insecure_channel('localhost:50054'); channel.close()"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 15s

volumes:
  neo4j-integration-data:
    driver: local
  redis-integration-data:
    driver: local
  nats-integration-data:
    driver: local

networks:
  default:
    name: integration-test-network

