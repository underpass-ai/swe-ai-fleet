---
# Kubernetes Job to run Agent Tooling E2E tests in cluster
apiVersion: batch/v1
kind: Job
metadata:
  name: agent-tooling-e2e
  namespace: swe-ai-fleet
  labels:
    app: agent-tooling-e2e
    component: e2e-test
spec:
  ttlSecondsAfterFinished: 3600  # Keep for 1 hour after completion
  backoffLimit: 0  # Don't retry on failure
  template:
    metadata:
      labels:
        app: agent-tooling-e2e
        component: e2e-test
    spec:
      restartPolicy: Never
      # Note: For E2E testing only, we need root to install packages
      # Production agent workspaces should use pre-built images
      securityContext:
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: test-runner
          # Use pre-built lightweight image with git, Python 3.13, pytest
          image: registry.underpassai.com/swe-fleet/agent-tools-test:v0.1.0
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          command:
            - /bin/bash
            - -c
            - |
              set -e
              
              echo "üöÄ Agent Tooling E2E Test"
              echo "========================"
              echo ""
              echo "‚úì Using pre-built agent-workspace image"
              echo "‚úì Git, Python 3.13, and test tools pre-installed"
              echo ""
              
              # Configure git
              git config --global user.name "E2E Test Agent"
              git config --global user.email "e2e@swe-ai-fleet.local"
              git config --global init.defaultBranch main
              
              # Install Python dependencies
              echo "üì¶ Installing project dependencies..."
              pip install --user -q -e ".[dev,grpc]"
              pip install --user -q requests psycopg2-binary
              
              echo ""
              echo "üß™ Running Agent Tooling E2E Tests..."
              echo "======================================"
              echo ""
              
              # Run E2E tests
              pytest tests/e2e/agent_tooling/test_agent_coding_task_e2e.py -v
              
              TEST_EXIT_CODE=$?
              
              echo ""
              if [ $TEST_EXIT_CODE -eq 0 ]; then
                echo "‚úÖ All tests passed!"
              else
                echo "‚ùå Tests failed with exit code $TEST_EXIT_CODE"
              fi
              
              exit $TEST_EXIT_CODE
          
          workingDir: /workspace
          
          volumeMounts:
            - name: source-code
              mountPath: /workspace
              readOnly: false
          
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "2000m"
              memory: "2Gi"
          
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: PYTEST_CURRENT_TEST
              value: ""
      
      volumes:
        - name: source-code
          emptyDir: {}
      
      initContainers:
        - name: clone-repo
          image: docker.io/alpine/git:v2.43.0
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "üì• Cloning repository..."
              git clone https://github.com/underpass-ai/swe-ai-fleet.git /workspace
              cd /workspace
              
              # Checkout the feature branch
              git checkout feature/agent-tools-enhancement || echo "Branch not in remote yet, using main"
              
              # Fix permissions for agent user (UID 1000)
              chown -R 1000:1000 /workspace
              
              echo "‚úì Repository cloned and permissions fixed"
              ls -la
          volumeMounts:
            - name: source-code
              mountPath: /workspace
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - CHOWN

---
# Service Account for the test job (if needed)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent-tooling-e2e
  namespace: swe-ai-fleet
  labels:
    app: agent-tooling-e2e

---
# Role for test job (minimal permissions)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: agent-tooling-e2e
  namespace: swe-ai-fleet
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list"]

---
# RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: agent-tooling-e2e
  namespace: swe-ai-fleet
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: agent-tooling-e2e
subjects:
  - kind: ServiceAccount
    name: agent-tooling-e2e
    namespace: swe-ai-fleet

