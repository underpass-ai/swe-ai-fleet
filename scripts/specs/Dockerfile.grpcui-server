# syntax=docker/dockerfile:1
# grpcui Server - Interactive gRPC API Testing
#
# Provides a web-based interface for testing gRPC endpoints interactively,
# similar to Swagger UI for REST APIs. Auto-discovers services via reflection.
#
# Usage:
#   Build: podman build -f scripts/specs/Dockerfile.grpcui-server -t grpcui-server:latest .
#   Run:   podman run -p 8080:8080 grpcui-server:latest localhost:50055

FROM docker.io/library/golang:1.23-bookworm AS builder

# Metadata
LABEL maintainer="SWE AI Fleet Team"
LABEL description="grpcui interactive gRPC testing server"

# Environment
ENV CGO_ENABLED=0
ENV GOOS=linux
ENV GOARCH=amd64

WORKDIR /build

# Install grpcui
RUN go install github.com/fullstorydev/grpcui/cmd/grpcui@latest

# ==========================================
# Stage 2: Runtime - Minimal Server
# ==========================================
FROM docker.io/library/debian:bookworm-slim

# Metadata
LABEL maintainer="SWE AI Fleet Team"
LABEL description="grpcui interactive gRPC testing server"
LABEL version="1.0.0"

# Environment
ENV DEBIAN_FRONTEND=noninteractive

# Install ca-certificates and curl for health checks
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r grpcuser && useradd -r -g grpcuser -u 1000 grpcuser && \
    mkdir -p /app && chown -R grpcuser:grpcuser /app

# Copy grpcui binary from builder
COPY --from=builder --chown=grpcuser:grpcuser /go/bin/grpcui /usr/local/bin/grpcui

# Copy proto specs for service discovery
COPY specs/fleet /app/specs/fleet
RUN chown -R grpcuser:grpcuser /app/specs

# Copy startup script
COPY scripts/specs/start-grpcui.sh /app/start.sh
RUN chmod +x /app/start.sh && chown grpcuser:grpcuser /app/start.sh

WORKDIR /app

USER grpcuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8080/ || exit 1

# Startup
CMD ["/app/start.sh"]

