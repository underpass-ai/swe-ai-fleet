---
# Kubernetes Job to run VLLM Agent with Tools E2E test in cluster
# Tests: test_vllm_agent_with_smart_context from test_orchestrator_with_tools_e2e.py
apiVersion: batch/v1
kind: Job
metadata:
  name: test-vllm-agent-tools-e2e
  namespace: swe-ai-fleet
  labels:
    app: test-vllm-agent-tools-e2e
    component: e2e-test
spec:
  ttlSecondsAfterFinished: 3600  # Keep for 1 hour after completion
  backoffLimit: 0  # Don't retry on failure
  template:
    metadata:
      labels:
        app: test-vllm-agent-tools-e2e
        component: e2e-test
    spec:
      restartPolicy: Never
      securityContext:
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: test-runner
          # Use pre-built test image with Python 3.13, pytest, dependencies
          image: registry.underpassai.com/swe-fleet/test-vllm-agent-tools-e2e:v0.1.0
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          # The run_test.py script handles everything
          command: ["python", "/app/run_test.py"]

          workingDir: /workspace

          volumeMounts:
            - name: source-code
              mountPath: /workspace
              readOnly: false

          resources:
            requests:
              cpu: "500m"
              memory: "2Gi"  # Higher memory for agent execution
            limits:
              cpu: "2000m"
              memory: "4Gi"

          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: PYTEST_CURRENT_TEST
              value: ""
            # Cluster service endpoints
            - name: VLLM_URL
              value: "http://vllm-server.swe-ai-fleet.svc.cluster.local:8000"
            - name: ORCHESTRATOR_HOST
              value: "orchestrator.swe-ai-fleet.svc.cluster.local"
            - name: ORCHESTRATOR_PORT
              value: "50055"
            - name: CONTEXT_HOST
              value: "context.swe-ai-fleet.svc.cluster.local"
            - name: CONTEXT_PORT
              value: "50054"

      volumes:
        - name: source-code
          emptyDir: {}

      initContainers:
        - name: clone-repo
          image: docker.io/alpine/git:v2.43.0
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "ðŸ“¥ Cloning repository..."

              # Try to clone from current branch if possible, otherwise main
              BRANCH="${GIT_BRANCH:-main}"
              git clone --depth 1 --branch "${BRANCH}" https://github.com/underpass-ai/swe-ai-fleet.git /workspace 2>/dev/null || \
              git clone --depth 1 https://github.com/underpass-ai/swe-ai-fleet.git /workspace

              cd /workspace

              # Fix permissions for agent user (UID 1000)
              chown -R 1000:1000 /workspace

              echo "âœ“ Repository cloned and permissions fixed"
              echo "âœ“ Branch/commit: $(git rev-parse --short HEAD)"
          volumeMounts:
            - name: source-code
              mountPath: /workspace
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - CHOWN
          env:
            - name: GIT_BRANCH
              value: "hexagonal-refactor-v2"  # Current branch or "main"

---
# Service Account for the test job
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-vllm-agent-tools-e2e
  namespace: swe-ai-fleet
  labels:
    app: test-vllm-agent-tools-e2e

---
# Role for test job (minimal permissions - read pods for debugging)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: test-vllm-agent-tools-e2e
  namespace: swe-ai-fleet
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list"]

---
# RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: test-vllm-agent-tools-e2e
  namespace: swe-ai-fleet
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: test-vllm-agent-tools-e2e
subjects:
  - kind: ServiceAccount
    name: test-vllm-agent-tools-e2e
    namespace: swe-ai-fleet

