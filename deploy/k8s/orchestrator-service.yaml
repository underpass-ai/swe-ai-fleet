apiVersion: v1
kind: Service
metadata:
  name: orchestrator
  namespace: swe
  labels:
    app: orchestrator
    component: microservice
spec:
  type: ClusterIP
  ports:
    - port: 50055
      targetPort: 50055
      protocol: TCP
      name: grpc
  selector:
    app: orchestrator

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator
  namespace: swe
  labels:
    app: orchestrator
    component: microservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orchestrator
  template:
    metadata:
      labels:
        app: orchestrator
        component: microservice
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: orchestrator
        image: localhost:5000/swe-ai-fleet/orchestrator:v0.1.0
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
        ports:
        - containerPort: 50055
          name: grpc
          protocol: TCP
        env:
        - name: GRPC_PORT
          value: "50055"
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import grpc; channel = grpc.insecure_channel('localhost:50055'); channel.close()"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import grpc; channel = grpc.insecure_channel('localhost:50055'); channel.close()"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      restartPolicy: Always

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: orchestrator-config
  namespace: swe
  labels:
    app: orchestrator
data:
  config.yaml: |
    service:
      name: orchestrator
      port: 50055
    
    logging:
      level: INFO
      format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"
    
    orchestration:
      default_rounds: 1
      default_num_agents: 3
      roles:
        - DEV
        - QA
        - ARCHITECT
        - DEVOPS
        - DATA

