---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin
  namespace: swe-ai-fleet
  labels:
    app: grafana
stringData:
  admin-user: admin
  admin-password: admin  # CHANGE THIS IN PRODUCTION
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: swe-ai-fleet
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      automountServiceAccountToken: false  # Security: Disable service account token automounting
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsNonRoot: true
      containers:
        - name: grafana
          image: docker.io/grafana/grafana:10.4.5
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: admin-password
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.swe-ai-fleet.underpassai.com"
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
              ephemeral-storage: "1Gi"  # Storage request for SonarCloud compliance
            limits:
              cpu: 500m
              memory: 1Gi
              ephemeral-storage: "2Gi"  # Storage limit for SonarCloud compliance
          volumeMounts:
            - name: data
              mountPath: /var/lib/grafana
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: swe-ai-fleet
  labels:
    app: grafana
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
    - name: http
      port: 3000
      targetPort: 3000
