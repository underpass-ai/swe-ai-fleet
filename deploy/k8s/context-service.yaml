apiVersion: v1
kind: Service
metadata:
  name: context
  namespace: swe
  labels:
    app: context
    component: microservice
spec:
  type: ClusterIP
  ports:
    - port: 50054
      targetPort: 50054
      protocol: TCP
      name: grpc
  selector:
    app: context

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: context
  namespace: swe
  labels:
    app: context
    component: microservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: context
  template:
    metadata:
      labels:
        app: context
        component: microservice
    spec:
      containers:
      - name: context
        image: localhost:5000/swe-ai-fleet/context:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 50054
          name: grpc
          protocol: TCP
        env:
        - name: GRPC_PORT
          value: "50054"
        - name: NEO4J_URI
          value: "bolt://neo4j:7687"
        - name: NEO4J_USER
          value: "neo4j"
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: neo4j-auth
              key: password
        - name: REDIS_HOST
          value: "redis"
        - name: REDIS_PORT
          value: "6379"
        - name: NATS_URL
          value: "nats://nats:4222"
        - name: ENABLE_NATS
          value: "true"
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import grpc; channel = grpc.insecure_channel('localhost:50054'); channel.close()"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import grpc; channel = grpc.insecure_channel('localhost:50054'); channel.close()"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      restartPolicy: Always

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: context-config
  namespace: swe
  labels:
    app: context
data:
  config.yaml: |
    service:
      name: context
      port: 50054
    
    neo4j:
      uri: bolt://neo4j:7687
      user: neo4j
    
    redis:
      host: redis
      port: 6379
    
    nats:
      url: nats://nats:4222
      enabled: true
    
    logging:
      level: INFO
      format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"

