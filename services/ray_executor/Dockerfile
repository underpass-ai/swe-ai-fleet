# syntax=docker/dockerfile:1
FROM python:3.12-slim AS base

WORKDIR /app

# Install system dependencies with cache mount
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && \
    apt-get install -y --no-install-recommends gcc g++

# Install Python dependencies with cache mount
COPY services/ray-executor/requirements.txt /app/requirements.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-cache-dir -r requirements.txt

# Generate gRPC code from proto (clean industry-standard approach)
COPY specs/fleet/ray_executor/v1/ray_executor.proto /app/specs/fleet/ray_executor/v1/ray_executor.proto
RUN mkdir -p /app/ray_executor/gen && \
    python -m grpc_tools.protoc \
    --proto_path=/app/specs/fleet/ray_executor/v1 \
    --python_out=/app/ray_executor/gen \
    --grpc_python_out=/app/ray_executor/gen \
    --pyi_out=/app/ray_executor/gen \
    ray_executor.proto && \
    # Fix known protoc bug: relative imports in _grpc.py files \
    sed -i 's/^import ray_executor_pb2/from . import ray_executor_pb2/' \
    /app/ray_executor/gen/ray_executor_pb2_grpc.py && \
    # Create __init__.py \
    echo 'from . import ray_executor_pb2, ray_executor_pb2_grpc\n__all__ = ["ray_executor_pb2", "ray_executor_pb2_grpc"]' \
    > /app/ray_executor/gen/__init__.py

# Copy application code
COPY core/ /app/core/
COPY services/ray-executor/ /app/ray-executor/

# Create non-root user
RUN groupadd -r appuser && \
    useradd -r -g appuser -u 1000 appuser && \
    chown -R appuser:appuser /app

# Set environment
ENV PYTHONPATH=/app/core:/app
ENV RAY_DEDUP_LOGS=0

# Switch to non-root user
USER appuser

# Expose gRPC port
EXPOSE 50056

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import grpc; channel = grpc.insecure_channel('localhost:50056'); channel.close()" || exit 1

# Run server
CMD ["python", "/app/ray-executor/server.py"]
